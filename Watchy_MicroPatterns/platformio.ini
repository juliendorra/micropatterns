[env:watchy_micropatterns]
platform = https://github.com/pioarduino/platform-espressif32/releases/download/53.03.13%2Bgithub/platform-espressif32.zip
framework = espidf, arduino
platform_packages =
        framework-espidf @ https://github.com/pioarduino/esp-idf/releases/download/v5.3.2/esp-idf-v5.3.2.zip
        framework-arduino @ https://github.com/espressif/arduino-esp32/archive/refs/tags/3.1.0.zip
board = esp32dev
board_build.partitions = min_spiffs.csv # TODO: Replace with InkWatchy's 'resources/tools/fs/in/partitions.csv' if possible
board_build.filesystem = littlefs
monitor_speed = 115200
monitor_filters = esp32_exception_decoder
lib_ldf_mode = chain # From InkWatchy
lib_compat_mode = off # From InkWatchy
lib_deps =
    # Core Watchy/Display libraries from InkWatchy
    Szybet/GxEPD2-watchy#1a1593255df2eae4aa163fea21f542d7c7798bd0
    Szybet/SmallRTC#36469c0a42b1122693df0c7aa83c1571d5f42bd1
    # Szybet/StableBMA#43e49e8f460c71bb1886c8f90a2cf8dfe21d940c # For Accelerometer, add if needed for input
    
    # Common GFX libraries (often dependencies, explicitly listed in InkWatchy)
    adafruit/Adafruit-GFX-Library#87e15509a9e16892e60947bc4231027882edbd34
    adafruit/Adafruit_BusIO#15fbda592d1b237b0a92cfb91841adb01a34efd9

    # JSON library (used in M5Paper MicroPatterns)
    bblanchon/ArduinoJson#22dd4da3afc8341b1faedf6433d506b84cfd0da7

    # Standard ESP32 libraries (usually bundled but good to ensure)
    Wire
    SPI
    FS # For LittleFS

build_flags =
    -Isrc/defines/ # If we create a defines folder like InkWatchy
    -Wno-deprecated-declarations
    -Wno-maybe-uninitialized
    -fno-if-conversion
    -Wno-format
    -Wno-stringop-truncation
    -Wno-unused-value
    # -Wno-use-after-free # Disabled for now, can be noisy
    -Wno-unused-variable
    -Wno-unused-function
    # -D SCREEN_PARTIAL_GREY_WORKAROUND=1 # InkWatchy specific, may not apply
    # -D SCREEN_FULL_WHITE_WORKAROUND=0 # InkWatchy specific, may not apply
    # -D SCREEN_BLACK_BORDER=0 # InkWatchy specific, may not apply
    !echo '-D GIT_COMMIT_HASH=\"'$(git log -1 --format=%%h)'\"'
    !echo '-D GIT_BRANCH=\"'$(git rev-parse --abbrev-ref HEAD)'\"'
    !echo '-D BUILD_TIME=\"'$(date '+%%Y-%%m-%%d,%%HH')'\"'
    # -Wl,-z,noexecstack # Rust lib workaround from InkWatchy, not needed for us

# To make sure all files in src are compiled by default
build_src_filter = +<*> -<docs/> -<test/> -<resources/>

# Remove some unused ESP-IDF components to save space, similar to InkWatchy
# (This is an advanced optimization, ensure it doesn't remove something needed by base ESP-IDF/Arduino)
# custom_component_remove =
#        espressif/esp_hosted
#        espressif/esp_wifi_remote
#        espressif/esp-dsp
#        espressif/network_provisioning
#        espressif/esp_rainmaker
#        espressif/rmaker_common
#        espressif/esp_insights
#        espressif/cbor
#        espressif/qrcode
#        espressif/esp-sr
#        espressif/libsodium
#        espressif/esp32-camera
